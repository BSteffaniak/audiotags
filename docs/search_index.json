[["index.html", "audiotags Manual Preface", " audiotags Manual Tianyi Shi 2020-10-27 Preface Thank you for considering audiotags! Before you start, please let me introduce to you some great features of bookdown: use left and right arrow keys to navigate to the previous/next page click the “font” (big “A”) button on the top-left and change to a serif font if you happen to hate sans-serif fonts as I do. If you believe that serious stuff must be rendered by LaTeX as I do, there is a LaTex-rendered PDF for you to download (click the download button on the top) If you love to read on a Kindle, there is also an epub output (click the download button on the top). "],["start-simple.html", "Chapter 1 Start Simple", " Chapter 1 Start Simple The following example shows how you can read an audio file, parse, set, and save its metadata: use audiotags::{MimeType, Picture, Tag, TagType}; const MP3_FILE: &amp;&#39;static str = &quot;assets/a.mp3&quot;; fn main() { // using `default()` so that the metadata format is guessed // (from the file extension) (in this case, Id3v2 tag is read) let mut tag = Tag::default().read_from_path(MP3_FILE).unwrap(); // You can also specify the metadata format (tag type): let _tag = Tag::with_tag_type(TagType::Id3v2) .read_from_path(MP3_FILE) .expect(&quot;Fail to read!&quot;); tag.set_title(&quot;foo title&quot;); assert_eq!(tag.title(), Some(&quot;foo title&quot;)); tag.remove_title(); assert!(tag.title().is_none()); tag.remove_title(); // trying to remove a field that&#39;s already empty won&#39;t hurt let cover = Picture { mime_type: MimeType::Jpeg, data: &amp;vec![0u8; 10], }; tag.set_album_cover(cover.clone()); assert_eq!(tag.album_cover(), Some(cover)); tag.remove_album_cover(); assert!(tag.album_cover().is_none()); tag.remove_album_cover(); tag.save_to_path(MP3_FILE).expect(&quot;Fail to save&quot;); // TASK: reload the file and prove the data have been saved } "],["final-words.html", "Chapter 2 Final Words", " Chapter 2 Final Words We have finished a nice book. "],["references.html", "References", " References "]]
